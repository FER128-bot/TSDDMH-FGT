<resources>
    <string name="app_name">Manual de Android</string>
    <string name="nombre_autor">Fernando Garcia Tapia</string>
    <string name="bienvenida">Grupo 7S11</string>

    <string name="tema_2_1">
    INSTALACI√ìN DE AMBIENTE DE DESARROLLO\n\n
    Para comenzar a desarrollar aplicaciones Android es necesario preparar el entorno adecuado. Esto implica instalar herramientas espec√≠ficas que nos permitir√°n escribir c√≥digo, compilarlo y probarlo tanto en dispositivos f√≠sicos como virtuales.\n\n
    1. JDK (Java Development Kit)\n
    Android se basa en el lenguaje Java. Por tanto, debemos instalar el JDK, que nos proporciona las herramientas necesarias para compilar y ejecutar aplicaciones en este lenguaje.\n\n
    2. Android Studio\n
    Es el entorno de desarrollo oficial (IDE) para Android. Est√° basado en IntelliJ IDEA y provee m√∫ltiples herramientas como un editor de c√≥digo avanzado, depurador, emulador, asistentes de interfaz gr√°fica y m√°s.\n\n
    Para instalarlo:\n
    - Dir√≠gete a https://developer.android.com/studio\n
    - Descarga la versi√≥n para tu sistema operativo (Windows, Mac o Linux)\n
    - Sigue las instrucciones del asistente de instalaci√≥n\n\n
    3. SDK Manager\n
    Dentro de Android Studio, el SDK Manager permite descargar versiones del sistema Android y herramientas complementarias como las APIs de Google, las im√°genes de emulador, y m√°s.\n\n
    4. Emulador (AVD)\n
    El Android Virtual Device (AVD) permite simular distintos modelos de tel√©fonos y tablets. Es ideal para realizar pruebas sin usar un dispositivo real.\n\n
    Tener todas estas herramientas correctamente instaladas y configuradas es el primer paso para empezar a desarrollar aplicaciones funcionales, atractivas y eficientes para el ecosistema Android.
</string>

    <string name="tema_2_2">
    ENTORNO DE TRABAJO (IDE)\n\n
    El entorno de trabajo es el conjunto de herramientas visuales que usamos para escribir, organizar, compilar y probar nuestro c√≥digo. Para desarrollo Android, el entorno oficial es Android Studio.\n\n
    Android Studio proporciona todo lo necesario para construir aplicaciones:\n\n
    1. Editor de c√≥digo con autocompletado, refactorizaci√≥n y resaltado de errores en tiempo real.\n\n
    2. Vista gr√°fica del dise√±o (Layout Editor) que permite crear interfaces arrastrando y soltando componentes.\n\n
    3. Administrador de proyectos, donde se organizan carpetas como Java, res, drawable, layout y manifest.\n\n
    4. Integraci√≥n con Git y otras herramientas de control de versiones para trabajo colaborativo.\n\n
    5. Emulador y herramientas de prueba integradas, permitiendo ejecutar la app sin requerir un dispositivo f√≠sico.\n\n
    Android Studio tambi√©n proporciona plantillas para iniciar proyectos r√°pidamente, asistentes para configurar Activities, compatibilidad con Jetpack y soporte para m√∫ltiples resoluciones y versiones de Android.\n\n
    Dominar el entorno de trabajo te permitir√° desarrollar con fluidez, detectar errores m√°s r√°pido y aplicar buenas pr√°cticas desde el inicio.
</string>

    <string name="tema_2_3">
    CREACI√ìN DE EMULADOR VIRTUAL (AVD)\n\n
    Un emulador de Android permite ejecutar una copia virtual de un dispositivo directamente en la computadora. Es una herramienta esencial para probar nuestras aplicaciones sin necesidad de usar un celular real.\n\n
    Android Studio incluye el AVD Manager (Android Virtual Device Manager), que facilita la creaci√≥n de estos emuladores de manera gr√°fica.\n\n
    Pasos para crear un emulador:\n\n
    1. Abre Android Studio y dir√≠gete al men√∫ ‚ÄúTools‚Äù ‚Üí ‚ÄúDevice Manager‚Äù o ‚ÄúAVD Manager‚Äù.\n\n
    2. Haz clic en ‚ÄúCreate Device‚Äù y selecciona un modelo de tel√©fono o tablet (por ejemplo, Pixel 6).\n\n
    3. Elige la versi√≥n de Android que quieres instalar en ese emulador (por ejemplo, API 33 o API 30).\n
    - Si no la tienes descargada, puedes hacerlo desde ah√≠ mismo.\n\n
    4. Configura nombre, orientaci√≥n, resoluci√≥n y otros par√°metros si lo deseas.\n\n
    5. Finaliza el asistente y haz clic en ‚ÄúPlay‚Äù para iniciar tu emulador.\n\n
    El emulador se abrir√° como una ventana separada, y funcionar√° como un dispositivo Android completo: puedes instalar APKs, ejecutar apps desde Android Studio o usar funcionalidades como c√°mara, GPS simulado, red m√≥vil, entre otras.\n\n
    üß™ Es una herramienta indispensable para pruebas, especialmente si necesitas validar c√≥mo se comporta tu app en distintos tama√±os de pantalla y versiones de Android.
</string>

    <string name="tema_2_4">
    CREAR PRIMER PROYECTO\n\n
    Una vez instalado Android Studio y configurado el entorno, es momento de crear tu primer proyecto.\n\n
    Pasos para crear un proyecto:\n\n
    1. Abre Android Studio y haz clic en ‚ÄúNew Project‚Äù.\n\n
    2. Selecciona una plantilla inicial.\n
    - Recomendado: ‚ÄúEmpty Activity‚Äù para empezar desde cero.\n\n
    3. Asigna un nombre al proyecto (por ejemplo, MiPrimeraApp) y un nombre al paquete (como com.ejemplo.miapp).\n\n
    4. Selecciona el lenguaje (Java o Kotlin). En este curso usamos Java.\n\n
    5. Define la versi√≥n m√≠nima de Android (Minimum SDK). Por ejemplo: API 21 (Lollipop) o superior.\n\n
    6. Finaliza el asistente y espera a que Android Studio genere la estructura del proyecto.\n\n
    Al terminar, se abrir√° el archivo MainActivity.java y su respectivo dise√±o XML. Podr√°s comenzar a escribir c√≥digo, agregar vistas, botones, cambiar textos y construir tu primera app paso a paso.\n\n
    Esta estructura base ya incluye:\n
    - una clase MainActivity (que se ejecuta al iniciar la app)\n
    - un layout principal (activity_main.xml)\n
    - un archivo AndroidManifest para declarar el comportamiento de la app\n\n
    A partir de aqu√≠ puedes comenzar a probar, personalizar y dar vida a tus ideas.
</string>
    <!-- TODO: Remove or change this placeholder text -->
    <string name="hello_blank_fragment">Hello blank fragment</string>


</resources>